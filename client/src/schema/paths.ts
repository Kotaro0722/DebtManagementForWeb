/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
    "/member": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** メンバーを一覧で取得する */
        get: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description 成功時のレスポンス */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            /** @example kotaro */
                            name?: string;
                            /** @example 960825958208765973 */
                            discord_id?: string;
                        };
                    };
                };
            };
        };
        put?: never;
        /**
         * メンバーを登録する
         * @description ログインした際に未登録の場合のみ
         */
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description 成功時のレスポンス */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            /** @example kotaro */
                            name?: string;
                            /** @example 960825958208765973 */
                            discord_id?: string;
                            /** @example  */
                            login_id?: string;
                        };
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/user_data/{code}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * ログイン時の処理を行う
         * @description Discordの認証後、URLのcodeの値
         */
        get: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    /** @description URLのcodeの値 */
                    code: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description ログインに成功し、Discordからユーザの情報を取得できている */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            /** @example kotaro */
                            user_name?: string;
                            /** @example 960825958208765973 */
                            discord_id?: string;
                            /** @example 9776f1de158a59c811cbfe80b4425d74 */
                            avatar_id?: string;
                        };
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
}
export type webhooks = Record<string, never>;
export interface components {
    schemas: never;
    responses: never;
    parameters: never;
    requestBodies: never;
    headers: never;
    pathItems: never;
}
export type $defs = Record<string, never>;
export type operations = Record<string, never>;
